rails new posts


rails g controller posts
rails g model Post title:string body:text
rails db:migrate

routes.rb

                                Rails.application.routes.draw do
                                  resources :posts
                                  root "posts#index"
                                end
posts_controller.rb

                                  class PostsController < ApplicationController

                                    def index
                                    end

                                    def new
                                    end

                                    def create
                                      @post = Post.new(post_params)
                                      @post.save

                                      redirect_to @post
                                    end

                                    def show
                                      @post = Post.find(params[:id])
                                    end

                                    private

                                    def post_params
                                      params.require(:post).permit(:title, :body)
                                    end

                                  end

  create  new.html.erb

                                    <h1> Make something </h1>

                                    <%= form_for :post, url: posts_path do |f| %>
                                      <p>
                                        <%= f.label :title %><br>
                                        <%= f.text_field :title %>
                                      </p>

                                      <p>
                                        <%= f.label :body %><br>
                                        <%= f.text_area :body %>
                                      </p>

                                      <p>
                                        <%= f.submit %><br>
                                      </p>

                                      <%end%>

index.html.erb

                                    <h1 class= "title">
                                      <%= @post.title %>
                                    </h1>

                                    <p class="date">
                                      Submitted <%= time_ago_in_words(@post.created_at) %> ago
                                    </p>

                                    <p class="body">
                                      <%= @post.body %>
                                    </p>

2. modify PostsController

                            class PostsController < ApplicationController

                              def index
                                @posts = Post.all.order('created_at DESC')
                              end

                              def new
                              end

                              def create
                                @post = Post.new(post_params)
                                @post.save

                                redirect_to @post
                              end

                              def show
                                @post = Post.find(params[:id])
                              end

                              private

                              def post_params
                                params.require(:post).permit(:title, :body)
                              end

                            end

    modify index.html.erb

                            <% @posts.each do |post| %>
                              <div class= "post_wrapper">
                                <h2 class="title"><%= link_to post.title, post %></h2>
                                <p class= "date"><%= time_ago_in_words(post.created_at) %>ago</p>
                              </div>
                              <%end%>

  3. CHANGE GIT BRANCH  (styling and structure)

  git checkout -b styling    <= styling is the name of the branch u wanna create,, it can be any name
  git branch    <= to check which branch ure at

  4. add this at model/post.rb

                            class Post < ApplicationRecord
                              validates :title, presence: true, length: {minimum: 5}
                              validates :body, presence: true
                            end

    modify posts_controller.rb

                              class PostsController < ApplicationController

                                def index
                                  @posts = Post.all.order('created_at DESC')
                                end

                                def new
                                  @post = Post.new
                                end

                                def create
                                  @post = Post.new(post_params)
                                  if @post.save
                                    redirect_to @post
                                  else
                                    render 'new'
                                  end
                                end

                                def show
                                  @post = Post.find(params[:id])
                                end

                                private

                                def post_params
                                  params.require(:post).permit(:title, :body)
                                end

                              end

  modify new.html.erb

                              <div id= "page_wrapper">
                              <h1> Make Something </h1>

                              <%= form_for :post, url: posts_path do |f| %>
                              <% if @post.errors.any? %>
                                <div id= "errors">
                                  <h2><%= pluralize(@post.errors.count, "error") %> stopped this post from saving </h2>
                                    <ul>
                                        <% @post.errors.full_messages.each do |msg| %>
                                        <li> <%= msg %> </li>
                                        <%end%>
                                    </ul>
                                </div>

                                <%end%>
                                <p>
                                  <%= f.label :title %><br>
                                  <%= f.text_field :title %>
                                </p>

                                <p>
                                  <%= f.label :body %><br>
                                  <%= f.text_area :body %>
                                </p>

                                <p>
                                  <%= f.submit %><br>
                                </p>

                                <%end%>
                              </div>

  5. add edit and destroy

                            class PostsController < ApplicationController

                              def index
                                @posts = Post.all.order('created_at DESC')
                              end

                              def new
                                @post = Post.new
                              end

                              def create
                                @post = Post.new(post_params)
                                if @post.save
                                  redirect_to @post
                                else
                                  render 'new'
                                end
                              end

                              def show
                                @post = Post.find(params[:id])
                              end

                              def edit
                                @post = Post.find(params[:id])
                              end

                              def update
                                @post = Post.find(params[:id])
                                if @post.update(params[:post].permit(:title, :body))
                                  redirect_to @post
                                else
                                  render 'edit'
                                end
                              end

                              def destroy
                                @post = Post.find(params[:id])
                                @post.destroy

                                redirect_to root_path

                              end

                              private

                              def post_params
                                params.require(:post).permit(:title, :body)
                              end

                            end


     modify show.html.erb

                           <div id="post_content">
                             <h1 class= "title">
                               <%= @post.title %>
                             </h1>

                             <p class="date">
                               Submitted <%= time_ago_in_words(@post.created_at) %> ago
                               <%= link_to 'Edit', edit_post_path(@post) %>
                               <%= link_to 'Delete', post_path(@post), method: :delete, data: {confirm: 'Are you sure?'} %>

                             </p>

                             <p class="body">
                               <%= @post.body %>
                             </p>
                           </div>
6. Styling
                            @import 'normalize'; see the CSS code below

  modify application.html.erb  inside body

                            <body>
                              <div id = "sidebar">
                                <ul>
                                  <li class="category"><%= link_to "Tumblr", root_path %> </li>
                                  <li><%= link_to "Posts" , root_path %>
                                    <li> About </li>
                                  </ul>

                              <p class="sign_in">User Login</p>
                            </div>

                              <div id="main_content">
                                <div id="header">
                                  <p> Post Feed </p>
                                  <div class="button">
                                    <button class ="button"><%= link_to "Make Post", new_post_path %></button>
                                    <button class = "button"> Log Out </button>
                                  </div>
                                </div>

                                <% flash.each do |name, msg| %>
                                <%= content_tag(:div, msg, class: "alert") %>s
                                <%end%>
                              <%= yield %>
                            </div>
                            </body>

7. Comment

rails g model Comment name:string body:text post:references

                              comment.rb :
                              class Comment < ApplicationRecord
                                belongs_to :post
                              end

                              post.rb :
                              class Post < ApplicationRecord
                                has_many :comments
                                validates :title, presence: true, length: {minimum: 5}
                                validates :body, presence: true
                              end

routes.rb

                            Rails.application.routes.draw do
                              resources :posts do
                                resources :comments
                              end
                              root "posts#index"
                            end

    rails g controller Comments

                        class CommentsController < ApplicationController

                          def create
                            @post = Post.find(params[:post_id])
                            @comment = @post.comments.create(params[:comment].permit(:name, :body))

                            redirect_to post_path(@post)
                          end
                        end

  create comments/_comment.html.erb

                    <div class="comment clearfix">
                    	<div class="comment_content">
                    		<p class="comment_name"><strong><%= comment.name %></strong></p>
                    		<p class="comment_body"><%= comment.body %></p>
                    		<p class="comment_title"><%= time_ago_in_words(comment.created_at) %> Ago</p>
                    	</div>
                    	</div>

    create comments/_form.html.erb

                        <%= form_for([@post, @post.comments.build]) do |f| %>
                          <p>
                            <%= f.label :name %><br>
                            <%= f.text_field :name %>
                          </p>

                          <p>
                            <%= f.label :body %><br>
                            <%= f.text_area :body %>
                          </p>
                          <br>
                          <p>
                            <%= f.submit %>
                          </p>

                        <%end%>

    DELETE COMMENT  , comments_controller.rb :

                    class CommentsController < ApplicationController

                      def create
                        @post = Post.find(params[:post_id])
                        @comment = @post.comments.create(params[:comment].permit(:name, :body))

                        redirect_to post_path(@post)
                      end

                      def destroy
                        @post = Post.find(params[:post_id])
                        @comment = @post.comments.find(params[:id])
                        @comment.destroy

                        redirect_to post_path(@post)
                      end
                    end


modify _comment.html.erb

                <div class="comment clearfix">
                	<div class="comment_content">
                		<p class="comment_name"><strong><%= comment.name %></strong></p>
                		<p class="comment_body"><%= comment.body %></p>
                		<p class="comment_title"><%= time_ago_in_words(comment.created_at) %> Ago</p>
                	</div>

                  <p><%= link_to 'Delete', [comment.post, comment], method: :delete, class: "button", data: {confirm:
                  'Are you sure?'} %> </p>
                	</div>

modify post.rb

                  class Post < ApplicationRecord
                    has_many :comments, dependent: :destroy
                    validates :title, presence: true, length: {minimum: 5}
                    validates :body, presence: true
                  end

8. generate Static Page

rails g controller pages
get '/about' , to: "pages#about" <= routes.rb

go to pages_controller.rb create method

                  def about
                  end

    create at views/pages/  about.html.erb

                  <div id= "page wrapper">
                    <div id= "profile_image">
                      <%= image_tag "JackMa.jpg" %>
                    </div>

                    <div id= "content">
                      <h1> Its Jack Ma </h1>
                      <p> Ma was born in Hangzhou, Zhejiang Province, China. Ma started to study English at a young age
                        and practiced English daily by conversing with English-speakers at Hangzhou hotel, a 40 minute bike
                         </p>

                       </div>
                     </div>

  modify application.html.erb

                        <div id="main_content">
                          <div id="header">
                            <% if current_page?(root_path) %>
                            <p> Post Feed </p>
                            <% elsif current_page?(about_path) %>
                            <p> My Site </p>
                            <% else %>
                            <%= link_to "Back to Post Feed", root_path %>
                            <%end%>

                            <div class="button">
                              <button class ="button"><%= link_to "Make Post", new_post_path %></button>
                              <button class = "button"> Log Out </button>
                              <button class ="button"><%= link_to "Back to Post Feed", root_path %></button>

                            </div>
                          </div>
